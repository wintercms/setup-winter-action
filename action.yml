name: 'Setup Winter'
author: Winter CMS
description: 'Set up a Winter install in a GitHub Action workflow'
branding:
  color: 'blue'
  icon: 'cloud-snow'
inputs:
  winter-ref:
    description: 'The Winter version or branch you wish to use. Defaults to the current development version.'
    required: false
    default: 'develop'
  php-version:
    description: 'Defines the PHP version to use with this Winter installation. This is forwarded to the shivammathur/setup-php action'
    required: false
    default: '8.4'
  plugin-author:
    description: 'When testing a plugin, this allows you to define the plugin author directory name.'
    required: false
  plugin-name:
    description: 'When testing a plugin, this allows you to defin the plugin directory name.'
    required: false
  configure-winter:
    description: 'Configures Winter after installation, including setting up an SQLite database and admin account.'
    required: false
  admin-password:
    description: 'If Winter is configured, this defines the admin password'
    required: false
    default: 'admin'
runs:
  using: 'composite'
  steps:
    - name: 'Checkout Winter CMS'
      uses: actions/checkout@v4
      with:
        repository: 'wintercms/winter'
        ref: '${{ inputs.winter-ref }}'
        
    - name: 'Checkout plugin'
      if: ${{ inputs.plugin-author && inputs.plugin-name }}
      uses: actions/checkout@v4
      with:
        path: 'plugins/${{ inputs.plugin-author }}/${{ inputs.plugin-name }}'

    - name: 'Install PHP'
      uses: shivammathur/setup-php@v2
      with:
        php-version: '${{ inputs.php-version }}'
        tools: composer:v2
        extensions: curl, fileinfo, gd, mbstring, openssl, pdo, pdo_sqlite, sqlite3, xml, zip

    - name: Update Composer merge
      if: ${{ inputs.plugin-author && inputs.plugin-name }}
      shell: bash
      run: 'sed -i "/\"plugins\/myauthor\/\*\/composer.json\"/c \"plugins\/${{ inputs.plugin-author }}\/${{ inputs.plugin-name }}\/composer.json\"" composer.json'

    - name: Install Composer dependencies
      shell: bash
      run: composer install --no-interaction --no-progress --no-scripts

    - name: Configure Winter
      if: ${{ inputs.configure-winter && inputs.admin-password }}
      shell: bash
      env:
        DB_CONNECTION: "sqlite"
        DB_DATABASE: "${{ github.workspace }}/storage/database.sqlite"
      run: |
        php artisan winter:env -q
        php artisan key:generate -q
        touch ${{ github.workspace }}/storage/database.sqlite
        php artisan migrate
        php artisan winter:passwd admin ${{ inputs.admin-password }}
